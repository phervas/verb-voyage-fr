@tailwind base;
@tailwind components;
@tailwind utilities;

/* Educational Game Design System - Playful & Child-Friendly 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Playful Game Palette */
    --background: 220 100% 97%;
    --foreground: 240 30% 20%;

    --card: 0 0% 100%;
    --card-foreground: 240 30% 20%;

    --popover: 0 0% 100%;
    --popover-foreground: 240 30% 20%;

    /* Vibrant Primary Colors */
    --primary: 260 85% 65%;
    --primary-foreground: 0 0% 100%;
    --primary-glow: 260 85% 75%;

    /* Fun Secondary Colors */
    --secondary: 340 80% 70%;
    --secondary-foreground: 0 0% 100%;

    /* Success & Learning Colors */
    --success: 140 65% 55%;
    --success-foreground: 0 0% 100%;
    --success-glow: 140 65% 65%;

    /* Warning & Challenge Colors */
    --warning: 35 85% 60%;
    --warning-foreground: 0 0% 100%;

    /* Muted & Accent */
    --muted: 220 40% 94%;
    --muted-foreground: 240 20% 50%;

    --accent: 180 70% 65%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 70% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 220 30% 88%;
    --input: 220 30% 88%;
    --ring: 260 85% 65%;

    /* Game-specific Colors */
    --game-bg: 220 60% 96%;
    --game-card: 0 0% 100%;
    --game-hover: 260 50% 92%;
    --game-active: 260 85% 85%;

    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary-glow)));
    --gradient-success: linear-gradient(135deg, hsl(var(--success)), hsl(var(--success-glow)));
    --gradient-game: linear-gradient(135deg, hsl(220 100% 97%), hsl(260 30% 95%));
    --gradient-card: linear-gradient(145deg, hsl(0 0% 100%), hsl(220 20% 98%));

    /* Shadows */
    --shadow-game: 0 8px 25px -8px hsl(var(--primary) / 0.3);
    --shadow-card: 0 4px 15px -4px hsl(220 20% 70% / 0.2);
    --shadow-hover: 0 8px 30px -8px hsl(var(--primary) / 0.4);

    --radius: 0.5rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --sidebar-background: 240 5.9% 10%;
    --sidebar-foreground: 240 4.8% 95.9%;
    --sidebar-primary: 224.3 76.3% 48%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 240 3.7% 15.9%;
    --sidebar-accent-foreground: 240 4.8% 95.9%;
    --sidebar-border: 240 3.7% 15.9%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans;
    background: var(--gradient-game);
    min-height: 100vh;
  }
}

@layer components {
  /* Game Component Styles */
  .game-card {
    @apply bg-card rounded-2xl border border-border shadow-[var(--shadow-card)];
    background: var(--gradient-card);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .game-button {
    @apply rounded-xl font-medium transform;
    box-shadow: var(--shadow-card);
  }

  /* Answer feedback states */
  .answer-correct {
    @apply ring-4 ring-success bg-success/15 text-foreground font-semibold scale-105;
    transition: transform 150ms ease, box-shadow 150ms ease, opacity 150ms ease, background-color 150ms ease;
  }

  .answer-correct-target {
    @apply ring-4 ring-success bg-success/15 text-foreground font-semibold;
  }

  .answer-wrong {
    @apply ring-4 ring-destructive bg-destructive/15 text-foreground font-semibold;
  }

  /* Success animations */
  .success-bounce {
    animation: successBounce 0.6s ease-out;
  }

  .shake {
    animation: shake 0.5s ease-in-out;
  }

  /* Softer shake for wrong answers */
  .shake-soft {
    animation: shakeSoft 0.28s ease-in-out;
  }

  .fade-in {
    animation: fadeIn 0.5s ease-out;
  }

  .answer-floater {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
    animation: floaterUp 0.8s ease-out forwards;
  }
}

@layer utilities {
  /* Custom animations */
  @keyframes successBounce {
    0%, 20%, 53%, 80%, 100% {
      transform: translate3d(0,0,0);
    }
    40%, 43% {
      transform: translate3d(0, -20px, 0) scale(1.1);
    }
    70% {
      transform: translate3d(0, -10px, 0) scale(1.05);
    }
    90% {
      transform: translate3d(0, -4px, 0) scale(1.02);
    }
  }

  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-4px); }
    20%, 40%, 60%, 80% { transform: translateX(4px); }
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  @keyframes pulse-gentle {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
  }

  .pulse-gentle {
    animation: pulse-gentle 2s infinite;
  }

  /* Softer shake keyframes */
  @keyframes shakeSoft {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-2px); }
    75% { transform: translateX(2px); }
  }

  /* Right answer pop */
  @keyframes successPop {
    0% { transform: scale(1); }
    60% { transform: scale(1.08); }
    100% { transform: scale(1); }
  }

  .success-pop {
    animation: successPop 220ms ease-out;
  }

  /* Expanding halo behind correct button */
  @keyframes successHalo {
    0% { opacity: 0.6; transform: translate(-50%, -50%) scale(1); }
    100% { opacity: 0; transform: translate(-50%, -50%) scale(1.4); }
  }

  .success-halo::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 85%;
    height: 65%;
    border-radius: 9999px;
    box-shadow: 0 0 0 3px hsl(var(--success));
    transform: translate(-50%, -50%);
    opacity: 0;
    pointer-events: none;
    animation: successHalo 500ms ease-out forwards;
  }

  @keyframes floaterUp {
    0% { opacity: 0; transform: translate(-50%, -10%); }
    10% { opacity: 1; transform: translate(-50%, -30%); }
    100% { opacity: 0; transform: translate(-50%, -70%); }
  }
}
